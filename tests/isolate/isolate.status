# Copyright (c) 2012, the Dart project authors.  Please see the AUTHORS file
# for details. All rights reserved. Use of this source code is governed by a
# BSD-style license that can be found in the LICENSE file.

[ $runtime == vm ]
isolate2_negative_test: Skip  # Need to resolve correct behaviour.
serialization_test: Skip  # tests frog-specific serialization code
v2_spawn_uri_test: Fail # test uses a ".js" suffix that is bogus on vm.
v2_compute_this_script_browser_test: Skip # browser specific test

[ ($compiler == none || $compiler == dart2js) && $runtime == drt ]
serialization_test: Skip  # tests frog-specific serialization code
v2*: Skip # new api for isolates not implemented in the VM yet.

[ $compiler == frog ]
v2_spawn_uri_vm_test: Skip # test uses a ".dart" suffix that only works in vm.
v2_spawn_uri_vm_negative_test: Skip # ditto above.

[ $compiler == frog && $runtime == d8 ]
v2_spawn_uri_test: Fail # not implemented for d8
v2_compute_this_script_browser_test: Skip # browser specific test

[ $compiler == dartc ]
serialization_test: Skip  # tests frog-specific serialization code
isolate_negative_test: Fail    # status change with --check-only
isolate2_negative_test: Fail   # status change with --check-only
v2*_negative_test: Fail, OK # fails only at runtime

# TODO(jmesserly): investigate why these are flaky on actual browsers
[ $compiler == frog && ($runtime == drt || $runtime == ff || $runtime == chrome || $runtime == safari || $runtime == ie || $runtime == opera) ]
nested_spawn2_test: Skip
nested_spawn_test: Skip
isolate_negative_test: Skip
isolate2_negative_test: Skip

[ $compiler == frog && $runtime == none ]
*: Skip

[ $runtime == safari ]
cross_isolate_message_test: Skip      # Depends on 32/64 bit Safari. See Issue 1120
mixed_test: Pass,Fail               # Depends on 32/64 bit Safari. See Issue 1120
mixed2_test: Pass,Fail              # Depends on 32/64 bit Safari. See Issue 1120
message_test: Skip

[ $runtime == ie && $system == windows ]
v2*: Skip

[ $runtime == safari && $system == macos ]
v2*: Skip

[ $runtime == ie && ($system == linux || $system == mac) ]
*: Skip

[ $runtime == safari && ($system == linux || $system == windows) ]
*: Skip

# TODO(jmesserly): now that we have a bot, we need to set up Opera testing.
[ $runtime == opera ]
*: Skip

[ $arch == simarm ]
*: Skip

[ $arch == arm ]
*: Skip

[ $compiler == dart2js ]
v2_spawn_function_test: Fail, OK # dart2js does not support APIv2
v2_spawn_function_custom_class_test: Skip # dart2js does not support APIv2
v2_spawn_uri_test: Fail, OK # dart2js does not support APIv2
v2_unresolved_ports_test: Fail, OK # dart2js does not support APIv2
v2_spawn_uri_vm_test: Skip # test uses a ".dart" suffix that only works in vm.
v2_spawn_uri_vm_negative_test: Skip # ditto above.
constructor_test: Fail, OK # dart2js does not support subclassing Isolate

[ $compiler == dart2js && $runtime == none ]
*: Fail, Pass # TODO(ahe): Triage these tests.

[ $compiler == dart2js && $browser ]
v2_compute_this_script_browser_test: Fail, OK # dart2js does not support APIv2

[ $compiler == dart2js && $runtime == ie ]
mint_maker_test: Skip # BUG(3304): Times out.
nested_spawn2_test: Skip # BUG(3304): Times out.
